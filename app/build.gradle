import com.dpal.Dependencies

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {

    defaultConfig {
        applicationId "com.dpal.magpy"
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "RAWG_API_KEY", "\"" + propOrDef("RAWG_MAGPY_API_KEY", "") + "\""
    }

    buildFeatures {
        compose true
    }

    buildTypes {
        release {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation Dependencies.Kotlin.stdLib
    implementation Dependencies.AndroidX.core
    implementation Dependencies.AndroidX.constraint
    implementation Dependencies.AndroidX.material
    implementation Dependencies.Retrofit.core
    implementation Dependencies.Retrofit.gson
    implementation Dependencies.Retrofit.rx
    debugImplementation Dependencies.Chucker.core
    releaseImplementation Dependencies.Chucker.noop

    implementation Dependencies.Compose.core
    implementation Dependencies.Compose.tooling
    implementation Dependencies.Compose.material
    implementation Dependencies.Compose.foundation
    implementation Dependencies.Compose.rxJava
    implementation Dependencies.Compose.runtime
    implementation Dependencies.Compose.navigation
    implementation Dependencies.okhttpProfiler

    implementation project(':features:search')
    implementation project(':features:details')
    implementation project(':data:games')
    implementation project(':data:tag')
    implementation project(':domain:search')
    implementation project(':domain:details')
    implementation project(':services:rawg')
    implementation project(':services:tagcache')
    implementation(project(":sqldelight"))

}

Object propOrDef(String propertyName, Object defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}